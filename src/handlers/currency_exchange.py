import random
import asyncio

from src.modules.functions import check_user_registered
from src.modules.logger import logger
from aiogram import Router, F, types
from src.modules.constants import DEFAULT_RATES, MONGE_PRICE

currency_exchange_router = Router()


@currency_exchange_router.message(F.text == '–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç')
async def currency_exchange(message: types.Message):
    if not await check_user_registered(message.from_user.id):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏ –æ–±—â–µ–Ω–∏–µ —Å–æ –º–Ω–æ–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")
        return

    try:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≤–∞–ª—é—Ç—É
        currency, rate = random.choice(list(DEFAULT_RATES.items()))

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –∑–∞ 1 –≥—Ä–∞–º–º
        price_per_gram = MONGE_PRICE / 10000

        # –°–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∑–∞ 1 –µ–¥–∏–Ω–∏—Ü—É –≤–∞–ª—é—Ç—ã
        grams_per_unit = (1 * rate) / price_per_gram

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –∏–¥–µ—Ç —Ä–∞—Å—á–µ—Ç
        await message.answer("üê± –°—á–∏—Ç–∞—é –∫–æ—Ä–∏—á–Ω–µ–≤—ã–µ –∫–∞–º—É—à–∫–∏...")
        await asyncio.sleep(2)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = (
            f"–ó–∞ 1 {currency} –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å {grams_per_unit:.1f} –≥ –∫–∞–º—É—à–∫–æ–≤ Monge –¥–ª—è –∫–æ—à–µ–∫\n\n"
            f"<i>–ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –º–µ–Ω—è –ª–∞–ø–∫–∏</i>"
        )

        await message.answer(response, parse_mode="HTML")

    except Exception as e:
        logger.error(f"Error in currency exchange: {e}")
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≥–¥–µ-—Ç–æ –æ—à–∏–±—Å—è –∏ –Ω–µ —Å–º–æ–≥ –ø–æ—Å—á–∏—Ç–∞—Ç—å")